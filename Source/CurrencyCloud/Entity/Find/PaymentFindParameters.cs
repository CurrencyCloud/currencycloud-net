using System;

namespace CurrencyCloud.Entity
{
    public class PaymentFindParameters : FindParameters
    {
        ///<summary>
        /// Unique human readable identifier
        ///</summary>
        [Param]
        public string ShortReference { get; set; }

        ///<summary>
        /// 3 character ISO 4217 currency code
        ///</summary>
        [Param]
        public string Currency { get; set; }

        ///<summary>
        /// Amount of Payment to 2dp
        ///</summary>
        [Param]
        public decimal? Amount { get; set; }

        ///<summary>
        /// Amount of Payment to 2dp
        ///</summary>
        [Param]
        public decimal? AmountFrom { get; set; }

        ///<summary>
        /// Amount of Payment to 2dp
        ///</summary>
        [Param]
        public decimal? AmountTo { get; set; }

        ///<summary>
        /// Status of the payment
        ///</summary>
        [Param]
        public string Status { get; set; }

        ///<summary>
        /// Reason for payment
        ///</summary>
        [Param]
        public string Reason { get; set; }

        ///<summary>
        /// ISO 8601 Date when the payment should be paid
        ///</summary>
        [Param]
        public DateTime? PaymentDateFrom { get; set; }

        ///<summary>
        /// ISO 8601 Date when the payment should be paid
        ///</summary>
        [Param]
        public DateTime? PaymentDateTo { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment should be transfered
        ///</summary>
        [Param]
        public DateTime? TransferredAtFrom { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment should be transfered
        ///</summary>
        [Param]
        public DateTime? TransferredAtTo { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was created
        ///</summary>
        [Param]
        public DateTime? CreatedAtFrom { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was created
        ///</summary>
        [Param]
        public DateTime? CreatedAtTo { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was updated
        ///</summary>
        [Param]
        public DateTime? UpdatedAtFrom { get; set; }

        ///<summary>
        /// ISO 8601 Datetime when the payment was updated
        ///</summary>
        [Param]
        public DateTime? UpdatedAtTo { get; set; }

        ///<summary>
        /// ID of the beneficiary
        ///</summary>
        [Param]
        public string BeneficiaryId { get; set; }

        ///<summary>
        /// Conversion unique ID
        ///</summary>
        [Param]
        public string ConversionId { get; set; }

        ///<summary>
        /// Enables search of deleted payments
        ///</summary>
        [Param]
        public bool? WithDeleted { get; set; }

        ///<summary>
        /// Search payments based on the unique human readable identifier of the payment group
        ///</summary>
        [Param]
        public string PaymentGroupId { get; set; }

        ///<summary>
        /// Unique reference generated by user to prevent duplicate payments
        ///</summary>
        [Param]
        public string UniqueRequestId { get; set; }

        ///<summary>
        /// Controls the search of payments at all account levels. Defaults to own.
        /// own: allows to search payments on the main account
        /// clients: allows to search payments of account sub accounts
        /// all: allows to search payments across account and sub-accounts
        ///</summary>
        [Param]
        public string Scope { get; set; }

        ///<summary>
        /// Reference ID of bulk upload, this field is generated only if the conversion has been created
        /// through bulk upload and NULL otherwise
        ///</summary>
        [Param]
        public string BulkUploadId { get; set; }

        ///<summary>
        ///  ours or shared
        ///</summary>
        [Param]
        public string ChargeType { get; set; }

        ///<summary>
        /// Compliance review status. Can be one of 'passed', 'in_review' or 'rejected'.
        ///</summary>
        [Param]
        public string ReviewStatus { get; set; }
    }
}
